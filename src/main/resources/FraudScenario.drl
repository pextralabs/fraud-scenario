package co.pextra.fraud;

import java.util.List;

import br.ufes.inf.lprm.scene.model.impl.Situation;
import br.ufes.inf.lprm.scene.util.SituationHelper;
import br.ufes.inf.lprm.situation.annotations.part;
import br.ufes.inf.lprm.situation.model.events.*;

declare SuspiciousSituation extends Situation
    client: Client @part
    transactions: List @part
end

rule "More than 10 transactions in an hour from one client"
@role(situation)
@type(SuspiciousSituation)
    when
     client : Client()
     transactions: List(size > 10) from accumulate(
        transaction: Transaction(client == client) over window:time (1h),
        collectList(transaction)
     )
     then
        SituationHelper.situationDetected(drools);
end

rule "More than 1 transaction of 200 dollars in an hour from the same client"
@role(situation)
@type(SuspiciousSituation)
    when
      client: Client()
      transactions: List(size > 1) from accumulate(
        transaction: Transaction(client == client, amount > 200) over window:time (1h),
        collectList(transaction)
      )
    then
      SituationHelper.situationDetected(drools);
end


rule "More than 10 transactions in an hour from small client portal"
@role(situation)
@type(SuspiciousSituation)
    when
      client: Client()
      transactions: List(size > 10) from accumulate(
        transaction: Transaction(client == client) over window:time (1h) from entry-point "small client",
        collectList(transaction)
      )
    then
      SituationHelper.situationDetected(drools);
end


rule "More than 100 transactions in an hour from big client portal"
@role(situation)
@type(SuspiciousSituation)
    when
      client: Client()
      transactions: List(size > 100) from accumulate(
        transaction: Transaction(client == client) over window:time (1h) from entry-point "big client",
        collectList(transaction)
      )
    then
      SituationHelper.situationDetected(drools);
end

rule "More than 3 suspicious cases in the day and we warn the owner"
    when
        c: Client()
        suspiciousSituations: List(size > 3) from accumulate (
            $sit: SuspiciousSituation(client == c)
            and
            Activation(situation == $sit) over window:time (1h),
            collectList($sit)
        )
        then
            System.out.println("Warning! " + c.getName());
end